@using CV_front.Models;
@inject data.CvHttpClient Cv
@page "/experiences"




@if (Loading)
{
    <div class="alert alert-info"> Chargement... </div>
}
else
{


    <div class="bradcam_area bradcam_bg_1">
        <div class="container">
            <div class="row">
                <div class="col-xl-12">
                    <div class="bradcam_text text-center">
                        <h3>Projets</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">



        
        <div class="col-lg-12">
            <blockquote class="generic-blockquote">
                <div class="typography">
                    <h1 >Développeur Full Stack</h1>
                    <h3 >OpenAI Corp</h3>
                    <h4 >Stage</h4>
                    <h6 >Janvier 2023 - Juin 2023 (6 mois)</h6>
                    <h6 >Télétravail | www.openai.com | Startup IA</h6>
                </div>

                <details class="custom-details">
                    <summary>Voir plus</summary>

                    <h3 class="mb-20 color-summary">Contextes</h3>
                    <blockquote class="generic-blockquote color-text">
                        Projet de plateforme de démonstration d’un assistant IA intégré à un site d'entreprise.
                    </blockquote>

                    <h3 class="mb-20 color-summary">Objectif</h3>
                    <blockquote class="generic-blockquote color-text">
                        Mettre en œuvre un site complet en Blazor hybride, hébergé sur un serveur Docker, interagissant avec des API GPT.
                    </blockquote>

                    <h3 class="mb-20 color-summary">Tâches</h3>
                    <ul class="unordered-list">
                        <li>Création d’une architecture Blazor Server + WebAssembly</li>
                        <li>Déploiement Docker avec Nginx reverse proxy</li>
                        <li>Connexion aux API GPT-4</li>
                        <li>Responsive design et compatibilité cross-browser</li>
                    </ul>

                    <h3 class="mb-20 color-summary">Résultats</h3>
                    <blockquote class="generic-blockquote color-text">
                        Mise en ligne réussie d'une démo publique, utilisée comme vitrine interne.
                    </blockquote>

                    <h3 class="mb-20 color-summary">Compétences</h3>
                    <ul class="unordered-list">
                        <li>Blazor</li>
                        <li>Docker</li>
                        <li>API REST</li>
                        <li>C#</li>
                        <li>CSS & Responsive Design</li>
                    </ul>
                </details>
            </blockquote>
        </div>






        @foreach (FullExperiences exp in FullExperiences)
        {

            <div class="col-lg-12">
                <blockquote class="generic-blockquote">
                    <div class="typography">
                        <h1>@exp.experiences.poste</h1>
                        <h3>@exp.experiences.societe</h3>
                        <h4>@exp.type</h4>
                        <h6>@exp.experiences.date @exp.experiences.duree</h6>
                        <h6>@exp.experiences.type @exp.experiences.site_web @exp.experiences.type_de_societe</h6>
                    </div>

                    <details class="custom-details">
                        <summary>Voir plus</summary>

                        <h3 class="mb-20 color-summary">Contextes</h3>
                        <blockquote class="generic-blockquote color-text">
                            @exp.experiences.context
                        </blockquote>

                        <h3 class="mb-20 color-summary">Objectif</h3>
                        <blockquote class="generic-blockquote color-text">
                            @exp.experiences.objectif
                        </blockquote>

                        <h3 class="mb-20 color-summary">Tâches</h3>
                        <ul class="unordered-list">
                            @foreach (TacheExperience taches in exp.taches)
                            {
                                <li>
                                    @taches.tache
                                </li>
                            }
                        </ul>

                        <h3 class="mb-20 color-summary">Résultats</h3>
                        <blockquote class="generic-blockquote color-text">
                            @exp.experiences.resultat
                        </blockquote>

                        <h3 class="mb-20 color-summary">Compétences</h3>
                        <ul class="unordered-list">
                            @foreach (Competence comp in exp.competences)
                            {
                                <li>
                                    @comp.name
                                </li>
                            }
                        </ul>
                    </details>
                </blockquote>
            </div>

            

    }
    </div>
}


@code {
    private bool Loading;
    private List<FullExperiences> FullExperiences = new List<FullExperiences>();

    protected override async Task OnInitializedAsync()
    {
        await LoadingExperiences();
        await base.OnInitializedAsync();
    }

    private async Task LoadingExperiences()
    {
        if (Loading)
        {
            return;
        }
        Loading = true;

        FullExperiences = await Cv.GetAllExperiencesAsync();
        Loading = false;
    }
}
